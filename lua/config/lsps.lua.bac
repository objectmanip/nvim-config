-- Import lspconfig
local lspconfig = require('lspconfig')
local lineLength = 150
local errorIgnore = { "E201", "E202", "E203", "E221", "E222", "E231", "E241",
                     "E242", "E501", "E226", "E225", "E227", "E302", "E265",
                     "E266", "E261", "E402", "F401", "F811", "F841"}  -- Ignore whitespace errors

-- Configure pylsp
lspconfig.pylsp.setup {
  on_attach = function(client, bufnr)
    -- Key mappings and other on_attach configurations (if needed)
  end,

  settings = {
    pylsp = {
      configurationSources = { "flake8" },  -- e.g., configure Flake8 as the linter
      plugins = {
        pycodestyle = {
          ignore = errorIgnore,
          maxLineLength = lineLength,
          enabled = false,
        },
        flake8 = {
          enabled = true,
          maxLineLength = lineLength,
          ignore = errorIgnore,
        },
        pylint = {
          enabled = false,
          maxLineLength = lineLength,
          ignore = errorIgnore,
        },  -- Disable pylint
        rope_completion = { enabled = true },  -- Enable rope for completions
        jedi_completion = {
          enabled = true,
          fuzzy = true,  -- Enable fuzzy matching in completions
        },
      },
    },
  },
}

-- You will likely want to reduce updatetime which affects CursorHold
-- note: this setting is global and should be set only once
vim.o.updatetime = 250
vim.api.nvim_create_autocmd({ "CursorHold", "CursorHoldI" }, {
  group = vim.api.nvim_create_augroup("float_diagnostic", { clear = true }),
  callback = function ()
    vim.diagnostic.open_float(nil, {focus=false})
  end
})

vim.diagnostic.config({
  virtual_text = false,
  signs = true,
  underline = true,
  update_in_insert = false,
  severity_sort = false,
})
